local AeroLib = {}
AeroLib.__index = AeroLib

-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Utility Functions
local function Tween(obj, props, duration, style, direction)
    style = style or Enum.EasingStyle.Quad
    direction = direction or Enum.EasingDirection.Out
    local tween = TweenService:Create(obj, TweenInfo.new(duration, style, direction), props)
    tween:Play()
    return tween
end

local function CreateInstance(class, props)
    local obj = Instance.new(class)
    for k, v in pairs(props) do
        if k ~= "Parent" then
            obj[k] = v
        end
    end
    if props.Parent then
        obj.Parent = props.Parent
    end
    return obj
end

-- Main Library
function AeroLib:CreateWindow(config)
    config = config or {}
    local windowTitle = config.Title or "Aero UI"
    local windowSize = config.Size or UDim2.new(0, 550, 0, 450)
    
    local Window = {}
    Window.Tabs = {}
    Window.CurrentTab = nil
    
    -- Create ScreenGui
    local ScreenGui = CreateInstance("ScreenGui", {
        Name = "AeroUI",
        Parent = game:GetService("CoreGui"),
        ZIndexBehavior = Enum.ZIndexBehavior.Sibling,
        ResetOnSpawn = false
    })
    
    -- Main Window Frame
    local MainFrame = CreateInstance("Frame", {
        Name = "MainFrame",
        Parent = ScreenGui,
        AnchorPoint = Vector2.new(0.5, 0.5),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        Size = windowSize,
        BackgroundColor3 = Color3.fromRGB(240, 240, 240),
        BorderSizePixel = 0,
        ClipsDescendants = true
    })
    
    -- Aero Glass Effect (Top gradient)
    local AeroGlass = CreateInstance("Frame", {
        Name = "AeroGlass",
        Parent = MainFrame,
        Size = UDim2.new(1, 0, 0, 35),
        BackgroundColor3 = Color3.fromRGB(185, 215, 252),
        BorderSizePixel = 0
    })
    
    local GlassGradient = CreateInstance("UIGradient", {
        Parent = AeroGlass,
        Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(228, 241, 254)),
            ColorSequenceKeypoint.new(0.5, Color3.fromRGB(204, 228, 252)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(178, 212, 248))
        }),
        Rotation = 90
    })
    
    -- Window Border Glow
    local BorderGlow = CreateInstance("UIStroke", {
        Parent = MainFrame,
        Color = Color3.fromRGB(100, 150, 200),
        Thickness = 1.5,
        Transparency = 0.3
    })
    
    local DropShadow = CreateInstance("ImageLabel", {
        Name = "Shadow",
        Parent = MainFrame,
        AnchorPoint = Vector2.new(0.5, 0.5),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        Size = UDim2.new(1, 30, 1, 30),
        BackgroundTransparency = 1,
        Image = "rbxasset://textures/ui/GuiImagePlaceholder.png",
        ImageColor3 = Color3.fromRGB(0, 0, 0),
        ImageTransparency = 0.7,
        ZIndex = 0
    })
    
    -- Title Label
    local TitleLabel = CreateInstance("TextLabel", {
        Name = "Title",
        Parent = AeroGlass,
        Position = UDim2.new(0, 10, 0, 0),
        Size = UDim2.new(0.7, 0, 1, 0),
        BackgroundTransparency = 1,
        Text = windowTitle,
        TextColor3 = Color3.fromRGB(30, 30, 30),
        TextSize = 13,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Enum.Font.SourceSans
    })
    
    -- Close Button
    local CloseBtn = CreateInstance("TextButton", {
        Name = "CloseButton",
        Parent = AeroGlass,
        AnchorPoint = Vector2.new(1, 0),
        Position = UDim2.new(1, -5, 0, 5),
        Size = UDim2.new(0, 25, 0, 25),
        BackgroundColor3 = Color3.fromRGB(232, 17, 35),
        Text = "Ã—",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 18,
        Font = Enum.Font.GothamBold,
        BorderSizePixel = 0
    })
    
    CreateInstance("UICorner", {Parent = CloseBtn, CornerRadius = UDim.new(0, 3)})
    
    CloseBtn.MouseButton1Click:Connect(function()
        Tween(MainFrame, {Size = UDim2.new(0, 0, 0, 0)}, 0.3)
        wait(0.3)
        ScreenGui:Destroy()
    end)
    
    CloseBtn.MouseEnter:Connect(function()
        Tween(CloseBtn, {BackgroundColor3 = Color3.fromRGB(255, 50, 50)}, 0.15)
    end)
    
    CloseBtn.MouseLeave:Connect(function()
        Tween(CloseBtn, {BackgroundColor3 = Color3.fromRGB(232, 17, 35)}, 0.15)
    end)
    
    -- Tab Container
    local TabContainer = CreateInstance("Frame", {
        Name = "TabContainer",
        Parent = MainFrame,
        Position = UDim2.new(0, 10, 0, 45),
        Size = UDim2.new(1, -20, 0, 35),
        BackgroundColor3 = Color3.fromRGB(225, 225, 225),
        BorderSizePixel = 0
    })
    
    CreateInstance("UICorner", {Parent = TabContainer, CornerRadius = UDim.new(0, 4)})
    
    local TabList = CreateInstance("UIListLayout", {
        Parent = TabContainer,
        FillDirection = Enum.FillDirection.Horizontal,
        Padding = UDim.new(0, 5),
        SortOrder = Enum.SortOrder.LayoutOrder
    })
    
    CreateInstance("UIPadding", {
        Parent = TabContainer,
        PaddingLeft = UDim.new(0, 5),
        PaddingTop = UDim.new(0, 5)
    })
    
    -- Content Container
    local ContentContainer = CreateInstance("Frame", {
        Name = "ContentContainer",
        Parent = MainFrame,
        Position = UDim2.new(0, 10, 0, 90),
        Size = UDim2.new(1, -20, 1, -100),
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BorderSizePixel = 0
    })
    
    CreateInstance("UICorner", {Parent = ContentContainer, CornerRadius = UDim.new(0, 4)})
    CreateInstance("UIStroke", {
        Parent = ContentContainer,
        Color = Color3.fromRGB(200, 200, 200),
        Thickness = 1
    })
    
    -- Dragging
    local dragging, dragInput, dragStart, startPos
    
    AeroGlass.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    AeroGlass.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    -- Create Tab Function
    function Window:CreateTab(tabName)
        local Tab = {}
        Tab.Elements = {}
        
        local TabButton = CreateInstance("TextButton", {
            Name = tabName,
            Parent = TabContainer,
            Size = UDim2.new(0, 120, 0, 25),
            BackgroundColor3 = Color3.fromRGB(190, 210, 235),
            Text = tabName,
            TextColor3 = Color3.fromRGB(40, 40, 40),
            TextSize = 12,
            Font = Enum.Font.SourceSans,
            BorderSizePixel = 0
        })
        
        CreateInstance("UICorner", {Parent = TabButton, CornerRadius = UDim.new(0, 4)})
        
        local TabContent = CreateInstance("ScrollingFrame", {
            Name = tabName .. "Content",
            Parent = ContentContainer,
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            BorderSizePixel = 0,
            ScrollBarThickness = 4,
            ScrollBarImageColor3 = Color3.fromRGB(100, 150, 200),
            Visible = false,
            CanvasSize = UDim2.new(0, 0, 0, 0),
            AutomaticCanvasSize = Enum.AutomaticSize.Y
        })
        
        local ContentList = CreateInstance("UIListLayout", {
            Parent = TabContent,
            Padding = UDim.new(0, 8),
            SortOrder = Enum.SortOrder.LayoutOrder
        })
        
        CreateInstance("UIPadding", {
            Parent = TabContent,
            PaddingLeft = UDim.new(0, 10),
            PaddingRight = UDim.new(0, 10),
            PaddingTop = UDim.new(0, 10),
            PaddingBottom = UDim.new(0, 10)
        })
        
        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(Window.Tabs) do
                tab.Button.BackgroundColor3 = Color3.fromRGB(190, 210, 235)
                tab.Content.Visible = false
            end
            TabButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TabContent.Visible = true
            Window.CurrentTab = Tab
        end)
        
        TabButton.MouseEnter:Connect(function()
            if TabContent.Visible == false then
                Tween(TabButton, {BackgroundColor3 = Color3.fromRGB(210, 230, 250)}, 0.15)
            end
        end)
        
        TabButton.MouseLeave:Connect(function()
            if TabContent.Visible == false then
                Tween(TabButton, {BackgroundColor3 = Color3.fromRGB(190, 210, 235)}, 0.15)
            end
        end)
        
        Tab.Button = TabButton
        Tab.Content = TabContent
        table.insert(Window.Tabs, Tab)
        
        if #Window.Tabs == 1 then
            TabButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TabContent.Visible = true
            Window.CurrentTab = Tab
        end
        
        -- Button Element
        function Tab:CreateButton(config)
            config = config or {}
            local buttonText = config.Name or "Button"
            local callback = config.Callback or function() end
            
            local ButtonFrame = CreateInstance("Frame", {
                Parent = TabContent,
                Size = UDim2.new(1, 0, 0, 35),
                BackgroundColor3 = Color3.fromRGB(240, 240, 240),
                BorderSizePixel = 0
            })
            
            CreateInstance("UICorner", {Parent = ButtonFrame, CornerRadius = UDim.new(0, 5)})
            CreateInstance("UIStroke", {
                Parent = ButtonFrame,
                Color = Color3.fromRGB(180, 180, 180),
                Thickness = 1
            })
            
            local Button = CreateInstance("TextButton", {
                Parent = ButtonFrame,
                Size = UDim2.new(1, 0, 1, 0),
                BackgroundTransparency = 1,
                Text = buttonText,
                TextColor3 = Color3.fromRGB(40, 40, 40),
                TextSize = 13,
                Font = Enum.Font.SourceSans
            })
            
            Button.MouseButton1Click:Connect(function()
                Tween(ButtonFrame, {BackgroundColor3 = Color3.fromRGB(200, 220, 240)}, 0.1)
                wait(0.1)
                Tween(ButtonFrame, {BackgroundColor3 = Color3.fromRGB(240, 240, 240)}, 0.1)
                callback()
            end)
            
            Button.MouseEnter:Connect(function()
                Tween(ButtonFrame, {BackgroundColor3 = Color3.fromRGB(230, 240, 250)}, 0.15)
            end)
            
            Button.MouseLeave:Connect(function()
                Tween(ButtonFrame, {BackgroundColor3 = Color3.fromRGB(240, 240, 240)}, 0.15)
            end)
        end
        
        -- Toggle Element
        function Tab:CreateToggle(config)
            config = config or {}
            local toggleText = config.Name or "Toggle"
            local defaultState = config.Default or false
            local callback = config.Callback or function() end
            
            local ToggleFrame = CreateInstance("Frame", {
                Parent = TabContent,
                Size = UDim2.new(1, 0, 0, 35),
                BackgroundColor3 = Color3.fromRGB(240, 240, 240),
                BorderSizePixel = 0
            })
            
            CreateInstance("UICorner", {Parent = ToggleFrame, CornerRadius = UDim.new(0, 5)})
            CreateInstance("UIStroke", {
                Parent = ToggleFrame,
                Color = Color3.fromRGB(180, 180, 180),
                Thickness = 1
            })
            
            local Label = CreateInstance("TextLabel", {
                Parent = ToggleFrame,
                Position = UDim2.new(0, 10, 0, 0),
                Size = UDim2.new(1, -60, 1, 0),
                BackgroundTransparency = 1,
                Text = toggleText,
                TextColor3 = Color3.fromRGB(40, 40, 40),
                TextSize = 13,
                TextXAlignment = Enum.TextXAlignment.Left,
                Font = Enum.Font.SourceSans
            })
            
            local ToggleButton = CreateInstance("TextButton", {
                Parent = ToggleFrame,
                AnchorPoint = Vector2.new(1, 0.5),
                Position = UDim2.new(1, -10, 0.5, 0),
                Size = UDim2.new(0, 40, 0, 20),
                BackgroundColor3 = defaultState and Color3.fromRGB(100, 180, 100) or Color3.fromRGB(180, 180, 180),
                Text = "",
                BorderSizePixel = 0
            })
            
            CreateInstance("UICorner", {Parent = ToggleButton, CornerRadius = UDim.new(1, 0)})
            
            local ToggleIndicator = CreateInstance("Frame", {
                Parent = ToggleButton,
                Position = defaultState and UDim2.new(1, -18, 0.5, 0) or UDim2.new(0, 2, 0.5, 0),
                AnchorPoint = Vector2.new(0, 0.5),
                Size = UDim2.new(0, 16, 0, 16),
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BorderSizePixel = 0
            })
            
            CreateInstance("UICorner", {Parent = ToggleIndicator, CornerRadius = UDim.new(1, 0)})
            
            local toggled = defaultState
            
            ToggleButton.MouseButton1Click:Connect(function()
                toggled = not toggled
                Tween(ToggleButton, {
                    BackgroundColor3 = toggled and Color3.fromRGB(100, 180, 100) or Color3.fromRGB(180, 180, 180)
                }, 0.2)
                Tween(ToggleIndicator, {
                    Position = toggled and UDim2.new(1, -18, 0.5, 0) or UDim2.new(0, 2, 0.5, 0)
                }, 0.2)
                callback(toggled)
            end)
        end
        
        -- Slider Element
        function Tab:CreateSlider(config)
            config = config or {}
            local sliderText = config.Name or "Slider"
            local minVal = config.Min or 0
            local maxVal = config.Max or 100
            local defaultVal = config.Default or minVal
            local callback = config.Callback or function() end
            
            local SliderFrame = CreateInstance("Frame", {
                Parent = TabContent,
                Size = UDim2.new(1, 0, 0, 50),
                BackgroundColor3 = Color3.fromRGB(240, 240, 240),
                BorderSizePixel = 0
            })
            
            CreateInstance("UICorner", {Parent = SliderFrame, CornerRadius = UDim.new(0, 5)})
            CreateInstance("UIStroke", {
                Parent = SliderFrame,
                Color = Color3.fromRGB(180, 180, 180),
                Thickness = 1
            })
            
            local Label = CreateInstance("TextLabel", {
                Parent = SliderFrame,
                Position = UDim2.new(0, 10, 0, 5),
                Size = UDim2.new(1, -20, 0, 15),
                BackgroundTransparency = 1,
                Text = sliderText,
                TextColor3 = Color3.fromRGB(40, 40, 40),
                TextSize = 13,
                TextXAlignment = Enum.TextXAlignment.Left,
                Font = Enum.Font.SourceSans
            })
            
            local ValueLabel = CreateInstance("TextLabel", {
                Parent = SliderFrame,
                Position = UDim2.new(1, -50, 0, 5),
                Size = UDim2.new(0, 40, 0, 15),
                BackgroundTransparency = 1,
                Text = tostring(defaultVal),
                TextColor3 = Color3.fromRGB(100, 150, 200),
                TextSize = 12,
                TextXAlignment = Enum.TextXAlignment.Right,
                Font = Enum.Font.SourceSansBold
            })
            
            local SliderBack = CreateInstance("Frame", {
                Parent = SliderFrame,
                Position = UDim2.new(0, 10, 1, -20),
                Size = UDim2.new(1, -20, 0, 6),
                BackgroundColor3 = Color3.fromRGB(200, 200, 200),
                BorderSizePixel = 0
            })
            
            CreateInstance("UICorner", {Parent = SliderBack, CornerRadius = UDim.new(1, 0)})
            
            local SliderFill = CreateInstance("Frame", {
                Parent = SliderBack,
                Size = UDim2.new((defaultVal - minVal) / (maxVal - minVal), 0, 1, 0),
                BackgroundColor3 = Color3.fromRGB(100, 180, 240),
                BorderSizePixel = 0
            })
            
            CreateInstance("UICorner", {Parent = SliderFill, CornerRadius = UDim.new(1, 0)})
            
            local SliderKnob = CreateInstance("Frame", {
                Parent = SliderBack,
                AnchorPoint = Vector2.new(0.5, 0.5),
                Position = UDim2.new((defaultVal - minVal) / (maxVal - minVal), 0, 0.5, 0),
                Size = UDim2.new(0, 14, 0, 14),
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BorderSizePixel = 0
            })
            
            CreateInstance("UICorner", {Parent = SliderKnob, CornerRadius = UDim.new(1, 0)})
            CreateInstance("UIStroke", {
                Parent = SliderKnob,
                Color = Color3.fromRGB(100, 150, 200),
                Thickness = 2
            })
            
            local dragging = false
            
            SliderBack.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                end
            end)
            
            SliderBack.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    local mousePos = input.Position.X
                    local sliderPos = SliderBack.AbsolutePosition.X
                    local sliderSize = SliderBack.AbsoluteSize.X
                    local percent = math.clamp((mousePos - sliderPos) / sliderSize, 0, 1)
                    local value = math.floor(minVal + (maxVal - minVal) * percent)
                    
                    SliderFill.Size = UDim2.new(percent, 0, 1, 0)
                    SliderKnob.Position = UDim2.new(percent, 0, 0.5, 0)
                    ValueLabel.Text = tostring(value)
                    callback(value)
                end
            end)
        end
        
        -- Input Box Element
        function Tab:CreateInput(config)
            config = config or {}
            local inputText = config.Name or "Input"
            local placeholder = config.Placeholder or "Enter text..."
            local callback = config.Callback or function() end
            
            local InputFrame = CreateInstance("Frame", {
                Parent = TabContent,
                Size = UDim2.new(1, 0, 0, 60),
                BackgroundColor3 = Color3.fromRGB(240, 240, 240),
                BorderSizePixel = 0
            })
            
            CreateInstance("UICorner", {Parent = InputFrame, CornerRadius = UDim.new(0, 5)})
            CreateInstance("UIStroke", {
                Parent = InputFrame,
                Color = Color3.fromRGB(180, 180, 180),
                Thickness = 1
            })
            
            local Label = CreateInstance("TextLabel", {
                Parent = InputFrame,
                Position = UDim2.new(0, 10, 0, 5),
                Size = UDim2.new(1, -20, 0, 15),
                BackgroundTransparency = 1,
                Text = inputText,
                TextColor3 = Color3.fromRGB(40, 40, 40),
                TextSize = 13,
                TextXAlignment = Enum.TextXAlignment.Left,
                Font = Enum.Font.SourceSans
            })
            
            local InputBox = CreateInstance("TextBox", {
                Parent = InputFrame,
                Position = UDim2.new(0, 10, 0, 25),
                Size = UDim2.new(1, -20, 0, 25),
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                Text = "",
                PlaceholderText = placeholder,
                TextColor3 = Color3.fromRGB(40, 40, 40),
                PlaceholderColor3 = Color3.fromRGB(150, 150, 150),
                TextSize = 12,
                Font = Enum.Font.SourceSans,
                ClearTextOnFocus = false,
                BorderSizePixel = 0
            })
            
            CreateInstance("UICorner", {Parent = InputBox, CornerRadius = UDim.new(0, 4)})
            CreateInstance("UIStroke", {
                Parent = InputBox,
                Color = Color3.fromRGB(180, 180, 180),
                Thickness = 1
            })
            
            InputBox.FocusLost:Connect(function(enterPressed)
                if enterPressed then
                    callback(InputBox.Text)
                end
            end)
        end
        
        -- Label Element
        function Tab:CreateLabel(text)
            local LabelFrame = CreateInstance("Frame", {
                Parent = TabContent,
                Size = UDim2.new(1, 0, 0, 25),
                BackgroundTransparency = 1,
                BorderSizePixel = 0
            })
            
            local Label = CreateInstance("TextLabel", {
                Parent = LabelFrame,
                Size = UDim2.new(1, 0, 1, 0),
                BackgroundTransparency = 1,
                Text = text,
                TextColor3 = Color3.fromRGB(80, 80, 80),
                TextSize = 13,
                TextXAlignment = Enum.TextXAlignment.Left,
                Font = Enum.Font.SourceSans
            })
            
            return {
                SetText = function(newText)
                    Label.Text = newText
                end
            }
        end
        
        return Tab
    end
    
    -- Intro Animation
    MainFrame.Size = UDim2.new(0, 0, 0, 0)
    Tween(MainFrame, {Size = windowSize}, 0.4, Enum.EasingStyle.Back)
    
    return Window
end

return AeroLib
